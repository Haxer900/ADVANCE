We are building a full product media storage integration for our ecommerce platform where the frontend website will be hosted on Netlify, the admin panel frontend will be hosted on Vercel, and both frontends will connect to backend APIs hosted on Render. I want a system where all product images and videos are stored in Cloudinary and their metadata (including URLs) is stored in MongoDB Atlas (AWS Mumbai cluster). The system must allow me to add, change, delete, and edit product images and videos directly from the admin panel, and when a media file is updated or deleted from the admin panel, the backend must also update or delete it from Cloudinary and MongoDB so both stay in sync. All media must be linked to the respective product’s data in MongoDB so I can easily fetch and display them on the frontend. The admin panel should also allow me to manage all website images from one place, including banners, category images, lookbook images, etc., with the same Cloudinary + MongoDB system. When a product or media is uploaded, the backend should send it to Cloudinary via API, get the secure_url and public_id, and store them along with the file type, size, format, and upload date inside MongoDB under that product. When displaying products on the website, the URLs should be fetched from MongoDB and never hardcoded. For deletion, the backend must delete the files from Cloudinary using public_id before removing them from MongoDB. The system should support multiple media uploads per product with one marked as primary for thumbnails, and media should be optimized on upload: images should be converted to WebP and compressed, videos compressed and stored in MP4, using Cloudinary transformations. Loading time must be minimized, so enable caching where possible and use optimized delivery links from Cloudinary’s CDN. All uploads and deletions should be asynchronous with proper error logging, and the code should be modular to allow replacing Cloudinary with another service in the future. Store all sensitive credentials like MongoDB URI and Cloudinary API keys in .env files and validate all uploads to only allow formats like JPEG, PNG, WebP, and MP4. The final deliverable must be a working backend API that supports adding, editing, deleting products and their media, fetching media URLs for the frontend, and managing all site images from the admin panel, fully tested to ensure MongoDB Atlas and Cloudinary integration works smoothly.

